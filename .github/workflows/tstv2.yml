name: paper-bot

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      reset_state:
        description: "Reset paper_state.json naar seed"
        required: false
        default: "0"

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: paper-bot
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show repo and state
        run: |
          pwd
          ls -la
          if [ -f paper_state.json ]; then
            echo "state found:" && cat paper_state.json
          else
            echo "no state file"
          fi

      - name: Ensure/Reset state
        env:
          EQUITY_SEED: "1000"
          RESET_STATE: "${{ github.event.inputs.reset_state || '0' }}"
        run: |
          if [ "$RESET_STATE" = "1" ]; then
            echo "Forcing state reset"
            echo "{\"equity\":${EQUITY_SEED},\"open_pos\":{}}" > paper_state.json
            rm -f paper_equity.csv paper_trades.csv || true
          elif [ ! -f paper_state.json ]; then
            echo "{\"equity\":${EQUITY_SEED},\"open_pos\":{}}" > paper_state.json
            echo "Seeded state to ${EQUITY_SEED}"
          fi
          echo "STATE NOW:" && cat paper_state.json

      - name: Precreate CSVs
        run: |
          [ -f paper_equity.csv ] || echo "time,equity,open_positions" > paper_equity.csv
          [ -f paper_trades.csv ] || echo "time,symbol,side,price,qty,pnl,equity" > paper_trades.csv

      - name: Show START_EQUITY from bot.py
        run: |
          python - << 'PY'
          import bot
          print("bot.START_EQUITY =", bot.START_EQUITY)
          PY

      - name: Run one pass
        env:
          ONE_PASS: "1"
          TZ: "Europe/Brussels"
        run: |
          python paper_live.py | tee -a paper_log.txt

      - name: Verify outputs
        run: |
          ls -la
          head -n 5 paper_equity.csv || true
          head -n 5 paper_trades.csv || true
          test -s paper_log.txt || (echo "paper_log.txt missing/empty" && exit 1)
          test -s paper_equity.csv || (echo "paper_equity.csv missing/empty" && exit 1)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: paper-outputs
          path: |
            paper_log.txt
            paper_equity.csv
            paper_trades.csv
            paper_state.json
          retention-days: 30

      - name: Commit state and logs back to repo
        run: |
          mkdir -p logs
          cp -f paper_equity.csv logs/ || true
          cp -f paper_trades.csv logs/ || true
          cp -f paper_log.txt logs/ || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add logs/ paper_state.json || true
          git commit -m "logs+state: $(date -u +'%Y-%m-%dT%H:%MZ')" || echo "no changes"
          git push
